// Generate a reasonable number rules limited by $n.
@mixin fractional-child($nChildren, $n, $d) {
  @if $nChildren < 3 {
    @error "$nChildren must be greater than or equal to 3! Received #{nChildren}.";
  }
  @if $n > $d {
    @error "Fractions greater than 1 are not allowed! Received #{$n} / #{$d}.";
  }
  $frac: math.round(math.div($n, $d));
  // There is no middle for nChildren less than 3,
  // so lets just start at 3.
  @for $i from 3 to $nChildren {
    // Find the fractional index, bias right for odd numbers.
    $index: math.ceil(math.div($i, $frac));
    // Select only those sets of children that number $i.
    &:first-child:nth-last-child(#{$i}) {
      // Select the indexed child of that set.
      ~ :nth-child(#{$index}) {
        @content; // Apply your styles.
      }
    }
  }
}

@mixin middle-child($n) {
  @include fractional-child($n, 1, 2) {
    @content;
  }
}
